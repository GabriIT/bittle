#!/usr/bin/python3
# -*- coding: UTF-8 -*-
# autopep8 -i

# A complex skill to make Bittle climb up a steel ceiling with meganets on its feet.
# Demo: https://youtu.be/ravFaiJzrpo
import sys
sys.path.append("..")
from ardSerial import *

if __name__ == '__main__':
    try:
        flushSerialOutput(300)
        time.sleep(3)
        '''
        testSchedule is used to test various serial port commands
        '''
        testSchedule = [
            # - 'kbalance' indicates the command to control Bittle to stand normally
            # - 2 indicates the postponed time after finishing the command, in seconds
            # ['kbalance', 0.5],
            ['g', 0.5], # prevents 'g' token to auto run when Bittle is upside down
            ['ksit', 0.5],
            ['I', [8, 45, 9, 45, 10, 105, 11, 105, 12, 40, 13, 45, 14, -45, 15, -45], 0.5],  # test sit
            ['I', [8, -100, 9, 20, 10, 105, 11, 75, 12, 30, 13, 90, 14, -45, 15, -30], 0.5],
            ['I', [8, -128, 9, 35, 10, 70, 11, 50, 12, 30, 13, 105, 14, -35, 15, -5],0.5],
            ['I', [8, -128, 9, 35, 10, 70, 11, 50, 12, 70, 13, 105, 14, -35, 15, -5], 0.5], #ok front LH
            ['I', [8, -128, 9, -100, 10, 95, 11, 75, 12, 65, 13, 90, 14, -20, 15, -30], 0.5],

            ['I', [8, -128, 9, -100, 10, 105, 11, 75, 12, 65, 13, 45, 14, -35, 15, -30], 0.5],
            #            # -128, -100, 105, 75, 85, 45, -45, -30,
            ['I', [8, -128, 9, -128, 10, 127, 11, 127, 12, 65, 13, 90, 14, -80, 15, -80], 0.2], #new 16.Apr
            ['I', [8, -128, 9, -128, 10, 127, 11, 127, 12, 65, 13, 40, 14, -80, 15, -80], 0.2],  # new 16.Apr
            ['I', [8, -128, 9, -128, 10, 127, 11, 127, 12, 65, 13, 70, 14, -40, 15, -50], 0.5],  # new 16.Apr

            ['I', [8, -128, 9, -128, 10, 70, 11, 50, 12, 65, 13, 60, 14, -35, 15, -20], 0.5], #Gabri added
            ['I', [8, -128, 9, -128, 10, 127, 11, 127, 12, 65, 13, 60, 14, -80, 15, -80], 0.5],  # Gabri added

            ['I', [8, -80, 9, -80, 10, 127, 11, 127, 12, 10, 13, 10, 14, -50, 15, -50],0.5],
            ['I', [8, -80, 9, -80, 10, -15, 11, -15, 12, 10, 13, 10, 14, 70, 15, 70], 2],
            ['I', [8, -70, 9, -70, 10, 30, 11, 30, 12, -10, 13, -10, 14, 70, 15, 70], 0.5],
            ['I', [8, 30, 9, 30, 10, 10, 11, 10, 12, 70, 13, 70, 14, 60, 15, 60], 1], #back-legs raised 50%
            ['I', [0, -40, 8, 70, 9, 60, 10, -10, 11, 10, 12, 70, 13, 70, 14, 60, 15, 40], 1], #back-legs fully raised
            ['I', [0, 60, 8, 50, 9, 50, 10, 10, 11, 10, 12, 70, 13, 70, 14, 60, 15, 60], 1],  # back-legs fully raised
            ['I', [0, -60, 8, 50, 9, 60, 10, 10, 11, 30, 12, 70, 13, 70, 14, 60, 15, 60], 0.3], #back-leg LR moves away


            # ['I', [8, 110, 9, 127, 10, -50, 11, -50, 12, 90, 13, 90, 14, 12, 15, 2], 1],
           #         #  127, 127, -50, -50, 90, 90, 12, 2,
           #  ['I', [8, 127, 9, -20, 10, -50, 11, -50, 12, 90, 13, 90, 14, 12, 15, 2], 1],
           #          #  127, -20, -50, -50, 90, 90, 12, 2,
           #  ['I', [8, 127, 9, -20, 10, -50, 11, -50, 12, 90, 13, 40, 14, 12, 15, 2], 1],
           #            #  127, -20, -50, -50, 90, 40, 12, 2,
           #  ['I', [8, 127, 9, -20, 10, -50, 11, -50, 12, 90, 13, 90, 14, 12, 15, 2], 1],
           #        #  127, -20, -50, -50, 90, 90, 12, 2,
           #  ['I', [8, 127, 9, -20, 10, -50, 11, -50, 12, 0, 13, 90, 14, 12, 15, 2], 1],
           #           #  127, -20, -50, -50, 0, 90, 12, 2,
           #  ['I', [8, 50, 9, 50, 10, -20, 11, -20, 12, -50, 13, -50, 14, 0, 15, 90], 1],
           #            #  50, 50, -20, -20, -50, -50, 0, 90,
           #  ['I', [8, 50, 9, 50, 10, -20, 11, -20, 12, -50, 13, -50, 14, 90, 15, 90], 1],
                    #  50, 50, -20, -20, -50, -50, 90, 90,
            # ['I', [8, 30, 9, 30, 10, 30, 11, 30, 12, 30, 13, 30, 14, 30, 15, 30], 3],
                    #  30, 30, 30, 30, 30, 30, 30, 30, 12,

           # 30, 30, 30, 30, 30, 30, 30, 30, 12,



            # ['I', [8, -127, 9, 20, 10, 105, 11, 75, 12, 60, 13, 90, 14, -60, 15 -35], 3],   #Li
            # ['I', [8, -127, 9, -127, 10, 95, 11, 70, 12, 35, 13, 50, 14, -60, 15, -45], 4],  # step 2, both front toes bound

            # ['I', [15, 10, 14, 10, 12, 20, 8, -127, 9, -20, 13, 120], 3], new


            # ['d', 1]
            ]

        for task in testSchedule:  # execute the tasks in the testSchedule

           print(task)
           token = task[0][0]

           wrapper(task)
           printSerialMessage(token)
           time.sleep(task[-1])

        # schedulerToSkill(postureTable,testSchedule)
        # closeSerialBehavior()
        # logger.info("finish!")

    except Exception as e:
        logger.info("Exception")
        closeSerialBehavior()
        raise e
